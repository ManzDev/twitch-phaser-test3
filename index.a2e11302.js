import{P as r}from"./vendor.cddf5261.js";const d=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function i(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerpolicy&&(s.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?s.credentials="include":e.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(e){if(e.ep)return;e.ep=!0;const s=i(e);fetch(e.href,s)}};d();class h extends r.Scene{constructor(){super({key:"PhaserScene",active:!1})}preload(){this.load.image("P","assets/sprites/p.png"),this.load.image("H","assets/sprites/h.png"),this.load.image("A","assets/sprites/a.png"),this.load.image("S","assets/sprites/s.png"),this.load.image("E","assets/sprites/e.png"),this.load.image("R","assets/sprites/r.png")}create(){this.imageP=this.add.image(50,300,"P").setOrigin(0),this.imageH=this.add.image(200,300,"H").setOrigin(0),this.imageA=this.add.image(350,300,"A").setOrigin(0),this.imageS=this.add.image(500,300,"S").setOrigin(0),this.imageE=this.add.image(650,300,"E").setOrigin(0),this.imageR=this.add.image(800,300,"R").setOrigin(0),this.keys=this.input.keyboard.addKeys("P,H,A,S,E,R"),this.text=this.add.text(10,10,"Press one of the keys P, H, A, S, E or R",{font:"16px Courier",fill:"#000000"})}update(){this.imageP.setAlpha(this.keys.P.isDown?1:.2),this.imageH.setAlpha(this.keys.H.isDown?1:.2),this.imageA.setAlpha(this.keys.A.isDown?1:.2),this.imageS.setAlpha(this.keys.S.isDown?1:.2),this.imageE.setAlpha(this.keys.E.isDown?1:.2),this.imageR.setAlpha(this.keys.R.isDown?1:.2)}}const c=["ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","OPEN_BRACKET","CLOSED_BRACKET"],l=[38,38,40,40,37,39,37,39,66,65,13];class g extends r.Scene{constructor(){super({key:"KeyboardScene",active:!0})}preload(){this.load.image("keyboard","assets/sprites/keyboard-opreem.png"),this.load.image("keypress","assets/sprites/key1.png"),this.load.image("avocado","assets/sprites/super-avocado.png")}create(){this.keys=[],this.drawKeyboard(),this.avocado=this.add.image(450,175,"avocado").setVisible(!1)}debugKey(){this.input.keyboard.on("keydown",t=>console.log("Press: ",t.key,t.keyCode,t.code))}enableAvocado(){this.avocado.setVisible(!0),this.time.addEvent({delay:2e3,callback:()=>this.avocado.setVisible(!1)})}drawKeyboard(){this.add.image(0,0,"keyboard").setOrigin(0);const t=89,i=50;let a=106;c.forEach(e=>{const s=this.add.image(a,t,"keypress").setVisible(!1),o=this.input.keyboard.addKey(e);this.keys.push({idKey:e,imageKey:s,key:o}),a+=i}),this.input.keyboard.createCombo(l,{resetOnMatch:!0}),this.input.keyboard.on("keycombomatch",e=>this.enableAvocado())}update(){this.keys.forEach(({imageKey:t,key:i})=>t.setVisible(i.isDown))}}const p={type:r.AUTO,backgroundColor:"#efefef",scene:[g,h]};new r.Game(p);
